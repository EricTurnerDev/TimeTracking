name: build-app

on:
  push:
    branches:
      - main
      - continuous-integration

jobs:
  build:
    name: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        node-version:
          - 18.x

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: get-app-version
        id: app-version
        uses: martinbeentjes/npm-get-version-action@main
      - run: npm ci
      - run: npm run build
      - name: Archive Linux AppImage
        if: ${{ matrix.os == 'linux-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: timetracking-${{ steps.app-version.outputs.current-version}}-linux
          path: dist/TimeTracking*.AppImage
          if-no-files-found: ignore
      - name: Archive Windows exe
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: timetracking-${{ steps.app-version.outputs.current-version}}-windows
          path: dist/TimeTracking*.exe
          if-no-files-found: ignore